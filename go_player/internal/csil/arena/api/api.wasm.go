// Code generated by wit-bindgen-go. DO NOT EDIT.

package api

import (
	"go.bytecodealliance.org/cm"
)

// This file contains wasmimport and wasmexport declarations for "csil:arena".

//go:wasmimport [export]csil:arena/api [resource-new]player
//go:noescape
func wasmimport_PlayerResourceNew(rep0 uint32) (result0 uint32)

//go:wasmimport [export]csil:arena/api [resource-rep]player
//go:noescape
func wasmimport_PlayerResourceRep(self0 uint32) (result0 uint32)

//go:wasmimport [export]csil:arena/api [resource-drop]player
//go:noescape
func wasmimport_PlayerResourceDrop(self0 uint32)

//go:wasmexport csil:arena/api#[dtor]player
//export csil:arena/api#[dtor]player
func wasmexport_PlayerDestructor(self0 uint32) {
	self := cm.Reinterpret[cm.Rep]((uint32)(self0))
	Exports.Player.Destructor(self)
	return
}

//go:wasmexport csil:arena/api#[constructor]player
//export csil:arena/api#[constructor]player
func wasmexport_Constructor(bytes0 *uint8, bytes1 uint32) (result0 uint32) {
	bytes := cm.LiftList[cm.List[uint8]]((*uint8)(bytes0), (uint32)(bytes1))
	result := Exports.Player.Constructor(bytes)
	result0 = cm.Reinterpret[uint32](result)
	return
}

//go:wasmexport csil:arena/api#[method]player.play
//export csil:arena/api#[method]player.play
func wasmexport_PlayerPlay(self0 uint32, bytes0 *uint8, bytes1 uint32) (result0 uint64) {
	self := cm.Reinterpret[cm.Rep]((uint32)(self0))
	bytes := cm.LiftList[cm.List[uint8]]((*uint8)(bytes0), (uint32)(bytes1))
	result := Exports.Player.Play(self, bytes)
	result0 = (uint64)(result)
	return
}
