// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package api represents the exported interface "csil:arena/api".
package api

import (
	"go.bytecodealliance.org/cm"
)

// Player represents the exported resource "csil:arena/api#player".
//
//	resource player
type Player cm.Resource

// PlayerResourceNew represents the imported resource-new for resource "player".
//
// Creates a new resource handle.
//
//go:nosplit
func PlayerResourceNew(rep cm.Rep) (result Player) {
	rep0 := cm.Reinterpret[uint32](rep)
	result0 := wasmimport_PlayerResourceNew((uint32)(rep0))
	result = cm.Reinterpret[Player]((uint32)(result0))
	return
}

// ResourceRep represents the imported resource-rep for resource "player".
//
// Returns the underlying resource representation.
//
//go:nosplit
func (self Player) ResourceRep() (result cm.Rep) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_PlayerResourceRep((uint32)(self0))
	result = cm.Reinterpret[cm.Rep]((uint32)(result0))
	return
}

// ResourceDrop represents the imported resource-drop for resource "player".
//
// Drops a resource handle.
//
//go:nosplit
func (self Player) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_PlayerResourceDrop((uint32)(self0))
	return
}

func init() {
	Exports.Player.Destructor = func(self cm.Rep) {}
}
